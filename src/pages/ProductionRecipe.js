import React, { useState, useEffect } from 'react';
import {
    Container,
    Typography,
    Box,
    Paper,
    Card,
    CardContent,
    Button,
    Grid,
    List,
    ListItem,
    ListItemText,
    ListItemIcon,
    Chip,
    Alert,
    Stepper,
    Step,
    StepLabel,
    Divider,
    Avatar,
    Accordion,
    AccordionSummary,
    AccordionDetails
} from '@mui/material';
import {
    Assignment as RecipeIcon,
    PlayArrow,
    CheckCircle,
    Schedule,
    Person,
    Inventory,
    Info,
    Warning,
    ExpandMore,
    Science
} from '@mui/icons-material';
import { useAuth } from '../App';

function ProductionRecipe({ batchData, productData, onContinue }) {
    const [readyToProceed, setReadyToProceed] = useState(false);
    const [startTime] = useState(new Date());
    const { user } = useAuth();

    const steps = ['Recette & Instructions', 'Saisie Ingr√©dients', 'Contr√¥le Qualit√©', 'Finalisation'];

    // Donn√©es par d√©faut si pas de donn√©es pass√©es
    const defaultBatch = batchData || {
        batchNumber: 'DEMO-' + new Date().toISOString().slice(0, 10).replace(/-/g, '') + '-001',
        productCode: 'PROD001',
        quantity: 100,
        operatorName: user?.name,
        status: 'in_progress',
        startTime: new Date().toISOString()
    };

    const defaultProduct = productData || {
        name: 'Produit D√©monstration',
        code: 'PROD001',
        description: 'Produit de test pour d√©monstration du syst√®me',
        recipe: {
            instructions: `Instructions d√©taill√©es pour la production du ${defaultBatch.productCode}:

1. PR√âPARATION DE L'ENVIRONNEMENT
   - V√©rifier la propret√© de la zone de travail
   - S'assurer que tous les √©quipements sont fonctionnels
   - Porter les √©quipements de protection individuelle (EPI)
   - V√©rifier la temp√©rature ambiante (18-25¬∞C)

2. PR√âPARATION DES INGR√âDIENTS
   - Peser tous les ingr√©dients selon les quantit√©s indiqu√©es
   - V√©rifier la qualit√© et la date d'expiration de chaque ingr√©dient
   - Disposer les ingr√©dients dans l'ordre d'utilisation
   - Pr√©chauffer les √©quipements si n√©cessaire

3. PROCESSUS DE M√âLANGE - PHASE 1
   - Commencer par les ingr√©dients secs dans le m√©langeur principal
   - M√©langer √† vitesse lente (niveau 1) pendant 2 minutes
   - V√©rifier l'homog√©n√©it√© du m√©lange sec

4. PROCESSUS DE M√âLANGE - PHASE 2  
   - Ajouter progressivement les liquides en 3 √©tapes
   - Premi√®re √©tape : 50% du volume liquide, m√©langer 3 minutes
   - Deuxi√®me √©tape : 30% du volume liquide, m√©langer 2 minutes
   - Troisi√®me √©tape : 20% restant, m√©langer 1 minute

5. CONTR√îLE INTERM√âDIAIRE
   - Arr√™ter le m√©langeur et v√©rifier la consistance
   - Pr√©lever un √©chantillon pour contr√¥le visuel
   - Ajuster la viscosit√© si n√©cessaire
   - Nettoyer les parois du m√©langeur avec une spatule

6. FINALISATION
   - M√©lange final √† vitesse mod√©r√©e pendant 5 minutes
   - Contr√¥le visuel de l'homog√©n√©it√©
   - Pr√©l√®vement d'√©chantillon pour les tests qualit√©
   - Arr√™t de la production et nettoyage des outils`,
            estimatedTime: 45,
            difficulty: 'Moyen',
            ingredients: [
                { name: 'Base lavante douce', quantity: 500, unit: 'ml', description: 'Composant principal liquide, temp√©rature ambiante' },
                { name: 'Actif hydratant', quantity: 50, unit: 'ml', description: 'Agent moisturisant concentr√©' },
                { name: 'Conservateur naturel', quantity: 10, unit: 'ml', description: 'Syst√®me de conservation sans parab√®nes' },
                { name: 'Colorant alimentaire', quantity: 5, unit: 'g', description: 'Colorant bleu E133, dosage pr√©cis requis' },
                { name: 'Parfum naturel', quantity: 15, unit: 'ml', description: 'Fragrance hypoallerg√©nique' }
            ],
            equipment: [
                'M√©langeur industriel 50L',
                'Balance de pr√©cision (¬±0.1g)',
                'B√©chers gradu√©s (500ml, 100ml, 50ml)',
                'Spatule en inox alimentaire',
                'Thermom√®tre digital',
                'pH-m√®tre √©talonn√©'
            ],
            safetyNotes: [
                'Porter des gants nitrile obligatoire',
                'Utiliser des lunettes de s√©curit√©',
                'Assurer une ventilation ad√©quate (extraction d\'air)',
                '√âviter tout contact avec la peau et les yeux',
                'Avoir une douche oculaire accessible',
                'Garder les fiches de s√©curit√© √† port√©e de main'
            ]
        }
    };

    useEffect(() => {
        // Simuler la lecture des instructions (on pourrait tracker le temps)
        const timer = setTimeout(() => {
            setReadyToProceed(true);
        }, 3000); // L'utilisateur doit rester 3 secondes minimum

        return () => clearTimeout(timer);
    }, []);

    const handleContinue = () => {
        const updatedBatch = {
            ...defaultBatch,
            currentStep: 'ingredients',
            recipeViewedAt: new Date().toISOString(),
            recipeViewDuration: Math.round((new Date() - startTime) / 1000) // en secondes
        };

        console.log('üìã Recette consult√©e, passage aux ingr√©dients');
        if (onContinue) {
            onContinue(updatedBatch, defaultProduct);
        }
    };

    return (
        <Container maxWidth="lg" sx={{ py: 4 }}>
            {/* En-t√™te avec stepper */}
            <Box sx={{ mb: 4 }}>
                <Typography variant="h4" gutterBottom>
                    Recette & Instructions
                </Typography>
                
                {/* Stepper de progression */}
                <Paper sx={{ p: 3, mb: 3 }}>
                    <Stepper activeStep={0} alternativeLabel>
                        {steps.map((label, index) => (
                            <Step key={label}>
                                <StepLabel 
                                    StepIconComponent={index === 0 ? 
                                        () => <CheckCircle color="primary" /> : 
                                        undefined
                                    }
                                >
                                    {label}
                                </StepLabel>
                            </Step>
                        ))}
                    </Stepper>
                </Paper>

                {/* Informations du lot */}
                <Card sx={{ mb: 3 }}>
                    <CardContent>
                        <Grid container spacing={3} alignItems="center">
                            <Grid item xs={12} md={3}>
                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                                    <Avatar sx={{ bgcolor: 'primary.main' }}>
                                        <RecipeIcon />
                                    </Avatar>
                                    <Box>
                                        <Typography variant="subtitle2" color="textSecondary">
                                            Lot de Production
                                        </Typography>
                                        <Typography variant="h6">
                                            {defaultBatch.batchNumber}
                                        </Typography>
                                    </Box>
                                </Box>
                            </Grid>
                            <Grid item xs={12} md={3}>
                                <Typography variant="subtitle2" color="textSecondary">
                                    Produit
                                </Typography>
                                <Typography variant="body1">
                                    {defaultProduct.name}
                                </Typography>
                                <Typography variant="caption" color="textSecondary">
                                    {defaultProduct.code}
                                </Typography>
                            </Grid>
                            <Grid item xs={12} md={2}>
                                <Typography variant="subtitle2" color="textSecondary">
                                    Quantit√©
                                </Typography>
                                <Typography variant="h6" color="primary">
                                    {defaultBatch.quantity}
                                </Typography>
                            </Grid>
                            <Grid item xs={12} md={2}>
                                <Typography variant="subtitle2" color="textSecondary">
                                    Op√©rateur
                                </Typography>
                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                                    <Person fontSize="small" />
                                    <Typography variant="body2">
                                        {defaultBatch.operatorName}
                                    </Typography>
                                </Box>
                            </Grid>
                            <Grid item xs={12} md={2}>
                                <Typography variant="subtitle2" color="textSecondary">
                                    Temps Estim√©
                                </Typography>
                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                                    <Schedule fontSize="small" color="primary" />
                                    <Typography variant="body1">
                                        {defaultProduct.recipe.estimatedTime} min
                                    </Typography>
                                </Box>
                            </Grid>
                        </Grid>
                    </CardContent>
                </Card>
            </Box>

            <Grid container spacing={3}>
                {/* Instructions principales */}
                <Grid item xs={12} md={8}>
                    <Paper sx={{ p: 3, mb: 3 }}>
                        <Typography variant="h6" gutterBottom>
                            üìã Instructions de Production
                        </Typography>
                        <Box sx={{ 
                            backgroundColor: '#f8f9fa', 
                            p: 3, 
                            borderRadius: 2,
                            border: '1px solid #e9ecef',
                            whiteSpace: 'pre-line',
                            fontFamily: 'Roboto Mono, monospace',
                            fontSize: '0.9rem',
                            lineHeight: 1.8,
                            maxHeight: '500px',
                            overflowY: 'auto'
                        }}>
                            {defaultProduct.recipe.instructions}
                        </Box>
                    </Paper>

                    {/* √âquipements requis */}
                    <Accordion defaultExpanded>
                        <AccordionSummary expandIcon={<ExpandMore />}>
                            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                                <Science color="primary" />
                                <Typography variant="h6">
                                    √âquipements Requis
                                </Typography>
                            </Box>
                        </AccordionSummary>
                        <AccordionDetails>
                            <Grid container spacing={2}>
                                {defaultProduct.recipe.equipment.map((equipment, index) => (
                                    <Grid item xs={12} sm={6} key={index}>
                                        <Box sx={{ 
                                            display: 'flex', 
                                            alignItems: 'center', 
                                            gap: 1,
                                            p: 2,
                                            backgroundColor: '#f0f8ff',
                                            borderRadius: 1,
                                            border: '1px solid #b3d9ff'
                                        }}>
                                            <Inventory fontSize="small" color="primary" />
                                            <Typography variant="body2">
                                                {equipment}
                                            </Typography>
                                        </Box>
                                    </Grid>
                                ))}
                            </Grid>
                        </AccordionDetails>
                    </Accordion>
                </Grid>

                {/* Panneau lat√©ral */}
                <Grid item xs={12} md={4}>
                    {/* Ingr√©dients */}
                    <Paper sx={{ p: 3, mb: 3 }}>
                        <Typography variant="h6" gutterBottom>
                            üß™ Ingr√©dients Requis
                        </Typography>
                        <List dense>
                            {defaultProduct.recipe.ingredients.map((ingredient, index) => (
                                <ListItem key={index} sx={{ px: 0 }}>
                                    <ListItemText
                                        primary={
                                            <Typography variant="subtitle2" fontWeight="medium">
                                                {ingredient.name}
                                            </Typography>
                                        }
                                        secondary={
                                            <Box>
                                                <Typography variant="body1" color="primary" fontWeight="bold">
                                                    {ingredient.quantity} {ingredient.unit}
                                                </Typography>
                                                <Typography variant="caption" color="textSecondary">
                                                    {ingredient.description}
                                                </Typography>
                                            </Box>
                                        }
                                    />
                                </ListItem>
                            ))}
                        </List>
                    </Paper>

                    {/* Consignes de s√©curit√© */}
                    <Paper sx={{ p: 3, mb: 3 }}>
                        <Typography variant="h6" gutterBottom sx={{ color: 'warning.main' }}>
                            ‚ö†Ô∏è Consignes de S√©curit√©
                        </Typography>
                        <Alert severity="warning" sx={{ mb: 2 }}>
                            <Typography variant="subtitle2">
                                Respecter imp√©rativement ces consignes
                            </Typography>
                        </Alert>
                        <List dense>
                            {defaultProduct.recipe.safetyNotes.map((note, index) => (
                                <ListItem key={index} sx={{ px: 0 }}>
                                    <ListItemIcon sx={{ minWidth: 32 }}>
                                        <Warning color="warning" fontSize="small" />
                                    </ListItemIcon>
                                    <ListItemText 
                                        primary={note}
                                        primaryTypographyProps={{ 
                                            variant: 'body2',
                                            fontWeight: 'medium'
                                        }}
                                    />
                                </ListItem>
                            ))}
                        </List>
                    </Paper>

                    {/* Informations compl√©mentaires */}
                    <Paper sx={{ p: 3 }}>
                        <Typography variant="h6" gutterBottom>
                            ‚ÑπÔ∏è Informations
                        </Typography>
                        <Box sx={{ mb: 2 }}>
                            <Typography variant="subtitle2" color="textSecondary">
                                Niveau de Difficult√©
                            </Typography>
                            <Chip 
                                label={defaultProduct.recipe.difficulty}
                                color="primary"
                                variant="outlined"
                                size="small"
                            />
                        </Box>
                        <Box sx={{ mb: 2 }}>
                            <Typography variant="subtitle2" color="textSecondary">
                                D√©but de Production
                            </Typography>
                            <Typography variant="body2">
                                {new Date(defaultBatch.startTime).toLocaleString('fr-FR')}
                            </Typography>
                        </Box>
                        <Box>
                            <Typography variant="subtitle2" color="textSecondary">
                                Temps √âcoul√©
                            </Typography>
                            <Typography variant="body2" color="primary">
                                {Math.round((new Date() - new Date(defaultBatch.startTime)) / 60000)} min
                            </Typography>
                        </Box>
                    </Paper>
                </Grid>
            </Grid>

            {/* Actions */}
            <Box sx={{ mt: 4, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                <Alert 
                    severity={readyToProceed ? "success" : "info"}
                    sx={{ flex: 1, mr: 3 }}
                >
                    {readyToProceed ? 
                        "‚úÖ Instructions consult√©es - Vous pouvez continuer" :
                        "üìñ Lisez attentivement les instructions avant de continuer"
                    }
                </Alert>
                
                <Button
                    variant="contained"
                    size="large"
                    onClick={handleContinue}
                    disabled={!readyToProceed}
                    startIcon={<PlayArrow />}
                    sx={{ minWidth: 250 }}
                >
                    {readyToProceed ? 
                        "Continuer vers les Ingr√©dients" : 
                        "Lecture en cours..."
                    }
                </Button>
            </Box>
        </Container>
    );
}

export default ProductionRecipe;